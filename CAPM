import numpy as np
import pandas as pd
from pandas_datareader import data as wb
from datetime import date, timedelta
import requests
from bs4 import BeautifulSoup

#Twenty years of trading days i.e. 5000 = 250 * 20
dt = date.today() - timedelta(5000)

#Set the company to evaluate
while True:
        try:
            company = input("\nWhat company would you like to get the cost of capital for?\nType 'exit' to close. ").upper()
            if company == 'exit':
                exit()
            else:
        ## 10-year US Treasury Yield
                url = requests.get(f'https://finance.yahoo.com/quote/%5ETNX?p=^TNX&.tsrc=fin-srch').text
                soup = BeautifulSoup(url, 'lxml')

                Rf = soup.find("fin-streamer", {'class': 'Fw(b) Fz(36px) Mb(-4px) D(ib)'}).text
                Rf = float(Rf)

        ## Get Beta (5Y Monthly)
                url = requests.get('https://finance.yahoo.com/quote/'+company+'/').text
                soup = BeautifulSoup(url, 'lxml')

                beta = soup.find('td', {'data-test': 'BETA_5Y-value'}).text
                beta = float(beta)

        ## Get the Market Rate
            # Ticker and data source
                SPY = wb.DataReader('SPY', data_source='yahoo', start=dt)

            # Calculate total log returns
                SPY['log_returns'] = np.log(SPY['Adj Close'] / SPY['Adj Close'].shift(1))

                log_returns_a = SPY['log_returns'].mean() * 250
                Rm = log_returns_a * 100

        ## Equity Risk Premium
                ERP = Rm - Rf
                ERP = round(ERP, 4)

        ## Estimating the Cost of Capital using CAPM
                CAPM = Rf + beta * (Rm - Rf)
                CAPM = round(CAPM, 4)

                print("The average return on the market is " + str(Rm) + ".")
                print("The risk-free rate (10-year Treasury yield) is " + str(Rf) + ".")
                print("The equity risk premium is " + str(ERP) + ".")
                print(f"The Beta of {company} is " + str(beta) + ".")
                print("\n\nThe estimated cost of capital using CAPM is " + str(CAPM) + ".")
        except AttributeError:
                print("Not a valid ticker!")
        except ValueError:
                print("Data not found!")
