import pandas as pd
import requests
from bs4 import BeautifulSoup

while True:
    try:
        company = input("\nWhat company would you like to the relative valuation for?\nType 'exit' to close. ").upper()
        if company == 'exit':
            exit()
        else:
            ## Get TTM EPS
            url = 'https://www.macrotrends.net/stocks/charts/'+ company+ '/' + company +'/eps-earnings-per-share-diluted'
            r = requests.get(url)
            df_eps = pd.read_html(r.text)

            #Remove "$" form data
            array_eps = pd.DataFrame(df_eps[0], index=[0]).replace('[\$,]', '', regex=True).astype(float)

            #Remove Column Names
            array_eps.columns = range(array_eps.shape[1])

            eps_df=array_eps.iloc[0][1]

            ## Get the P/E , the P/S, P/B, and P/CF
            url = 'https://www.marketwatch.com/investing/stock/' + company + '/company-profile?mod=mw_quote_tab'
            r = requests.get(url)
            df_ratios = pd.read_html(r.text)
            df_key_ratios = pd.DataFrame(df_ratios[4], index=[2, 3, 4, 5])
            df_num = pd.DataFrame(df_ratios[4])

    # Price per Earning (used is without extraordinary items)
            pe_df = df_key_ratios.iloc[0][1]

            # Relative Valuation of the P/E
            Price_PE = pe_df * eps_df

    # Price to Sales Ratio
            ps_df = df_key_ratios.iloc[1][1]

            # Relative Valuation of the P/S
            Price_PS = ps_df * eps_df

    # Price to Book Ratio
            pb_df = df_key_ratios.iloc[2][1]

            # Relative Valuation of the P/B
            Price_PB = pb_df * eps_df

    # Price to Cash Flows Ratio
            pcf_df = df_key_ratios.iloc[3][1]

            # Relative Valuation of the P/CF
            Price_PCF = pcf_df * eps_df

    ## Relative average
            #RA = (Price_PCF + Price_PB + Price_PS + Price_PE)/4
            RA = ((Price_PS) + (Price_PE))/2
            RA = round(RA, 2)
            RA = str(RA)
            print("\nThe estimated relative valuation for " + company + " is: $" + RA)

    # Get the current stock price

            url = requests.get(f'https://www.cnbc.com/quotes/{company}').text
            soup = BeautifulSoup(url, 'lxml')
            current_price = soup.find('span', {'class': 'QuoteStrip-lastPrice'}).text

            print("\nThe current stock price of " + company + " is $" + current_price + '.')

    except ValueError:
        print("That is not a listed company! \nEnter a valid ticker!")
